basePath: /api/v1
definitions:
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.AdminCreateUserRequest:
    description: Data required for an administrator to create a new user account.
    properties:
      active:
        description: |-
          Active specifies if the new user account should be active immediately. Defaults to true if omitted.
          example: true
        example: true
        type: boolean
      email:
        description: |-
          Email is the new user's email address.
          required: true
          example: newuser@example.com
        example: newuser@example.com
        type: string
      email_verified:
        description: |-
          EmailVerified specifies if the new user's email should be marked as verified. Defaults to false.
          example: false
        example: false
        type: boolean
      name:
        description: |-
          Name is the new user's display name.
          required: true
          example: Jane Smith
        example: Jane Smith
        type: string
      password:
        description: |-
          Password is the initial password for the new user (min 8 characters).
          required: true
          example: InitialP@ssw0rd!
        example: InitialP@ssw0rd!
        minLength: 8
        type: string
      roles:
        description: |-
          Roles is an optional list of roles to assign to the new user.
          example: ["user", "editor"]
        example:
        - user
        - editor
        items:
          type: string
        type: array
    required:
    - email
    - name
    - password
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.AdminUpdateUserRequest:
    description: Data for an administrator to update an existing user's details. All
      fields are optional.
    properties:
      active:
        description: |-
          Active specifies whether the user account should be active.
          example: false
        example: false
        type: boolean
      email:
        description: |-
          Email is the user's updated email address. If changed, email verification status might be reset.
          example: "john.doe.updated@example.com"
        example: john.doe.updated@example.com
        type: string
      email_verified:
        description: |-
          EmailVerified specifies whether the user's email address is verified.
          example: true
        example: true
        type: boolean
      name:
        description: |-
          Name is the user's updated display name.
          example: "Johnathan Doe"
        example: Johnathan Doe
        type: string
      roles:
        description: |-
          Roles is the updated list of roles for the user. An empty slice clears existing roles.
          example: ["user", "admin"]
        example:
        - user
        - admin
        items:
          type: string
        type: array
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ChangeItemResponse:
    description: Details about a file or directory that has been modified, added,
      or deleted compared to the container's image.
    properties:
      kind:
        description: |-
          Kind indicates the type of change: 0 for Modified, 1 for Added, 2 for Deleted.
          required: true
          example: 1
        type: integer
      path:
        description: |-
          Path is the path to the file or directory that has changed.
          required: true
          example: "/app/config.json"
        example: /etc/nginx/nginx.conf
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ChangePasswordRequest:
    description: Data required for a user to change their own password.
    properties:
      current_password:
        description: |-
          CurrentPassword is the user's existing password.
          required: true
          example: OldP@ssw0rd!
        example: OldP@ssw0rd!
        type: string
      new_password:
        description: |-
          NewPassword is the desired new password (min 8 characters).
          required: true
          example: NewStrongP@ssw0rd!
        example: NewStrongP@ssw0rd!
        minLength: 8
        type: string
    required:
    - current_password
    - new_password
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ComposeScaleRequest:
    description: Specifies the service and the desired number of replicas.
    properties:
      replicas:
        description: |-
          Replicas is the desired number of containers for the service.
          required: true
          example: 3
        example: 3
        minimum: 0
        type: integer
      service:
        description: |-
          Service is the name of the service to scale.
          required: true
          example: "worker"
        example: worker
        type: string
    required:
    - replicas
    - service
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ComposeUpRequest:
    description: Contains the Docker Compose file content and options for deploying
      a project.
    properties:
      compose_file_content:
        description: |-
          ComposeFileContent is the raw YAML content of the Docker Compose file.
          required: true
          example: "version: '3.8'\nservices:\n  web:\n    image: nginx:latest\n"
        example: |
          version: '3.8'
          services:
            web:
              image: nginx:latest
              ports:
                - "8080:80"
        type: string
      force_recreate:
        description: |-
          ForceRecreate forces the recreation of containers even if their configuration hasn't changed.
          example: false
        example: false
        type: boolean
      no_build:
        description: |-
          NoBuild disables building images before starting containers.
          example: false
        example: false
        type: boolean
      no_start:
        description: |-
          NoStart creates containers but does not start them.
          example: false
        type: boolean
      project_name:
        description: |-
          ProjectName is the name to assign to the Compose project.
          required: true
          example: "my-web-app"
        type: string
      pull:
        description: |-
          Pull attempts to pull newer versions of images before starting containers.
          example: true
        type: boolean
      remove_orphans:
        description: |-
          RemoveOrphans removes containers for services not defined in the Compose file.
          example: false
        example: false
        type: boolean
    required:
    - compose_file_content
    - project_name
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ComposeValidateRequest:
    description: Contains the Docker Compose file content (YAML) to be validated.
    properties:
      compose_file_content:
        description: |-
          ComposeFileContent is the raw YAML content of the Docker Compose file.
          required: true
          example: "version: '3.8'\nservices:\n  web:\n    image: nginx:latest\n"
        example: |
          version: '3.8'
          services:
            web:
              image: nginx:latest
              ports:
                - "8080:80"
        type: string
    required:
    - compose_file_content
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.Container:
    properties:
      auto_remove:
        type: boolean
      cap_add:
        items:
          type: string
        type: array
      cap_drop:
        items:
          type: string
        type: array
      command:
        maxLength: 1024
        type: string
      container_id:
        type: string
      created_at:
        type: string
      dead:
        type: boolean
      detailed_network_info:
        additionalProperties:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.DetailedNetwork'
        type: object
      detailed_volume_info:
        additionalProperties:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.DetailedVolume'
        type: object
      entrypoint:
        description: Fields from inspect conversion (might be redundant)
        items:
          type: string
        type: array
      env_vars:
        items:
          type: string
        type: array
      exit_code:
        type: integer
      exposed_ports:
        items:
          type: string
        type: array
      finished_at:
        type: string
      has_changed:
        type: boolean
      health:
        type: string
      health_log:
        type: string
      healthcheck:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.JSONMap'
      host_ipc:
        type: boolean
      host_pid:
        type: boolean
      id:
        type: integer
      image:
        type: string
      image_id:
        type: string
      ip_address:
        type: string
      labels:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.JSONMap'
      last_inspected:
        type: string
      mounts:
        items:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.MountPoint'
        type: array
      name:
        maxLength: 255
        type: string
      names:
        description: Fields from list item conversion (might be redundant with inspect)
        items:
          type: string
        type: array
      network_mode:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkMode'
      networks:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.JSONMap'
      notes:
        maxLength: 5000
        type: string
      oom_killed:
        type: boolean
      paused:
        type: boolean
      platform:
        type: string
      ports:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.JSONMap'
      privileged:
        type: boolean
      processes:
        items:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.Process'
        type: array
      read_only:
        type: boolean
      resource_limits:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ResourceLimits'
      resources:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.JSONMap'
      restart_count:
        type: integer
      restart_policy:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.RestartPolicy'
      restarting:
        type: boolean
      running:
        type: boolean
      secrets:
        items:
          type: string
        type: array
      security_info:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SecurityInfo'
      security_options:
        items:
          type: string
        type: array
      security_profile:
        type: string
      size_root_fs:
        type: integer
      size_rw:
        type: integer
      started_at:
        type: string
      state:
        description: Raw state string
        type: string
      stats:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerStats'
      status:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerStatus'
      up_time:
        type: string
      updated_at:
        type: string
      user:
        type: string
      user_id:
        type: integer
      userns_mode:
        type: string
      volumes:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.JSONMap'
      working_dir:
        type: string
    required:
    - image_id
    - name
    - network_mode
    - restart_policy
    - user_id
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerCreateRequest:
    description: Configuration details for creating a new Docker container.
    properties:
      auto_remove:
        description: |-
          AutoRemove automatically removes the container when it exits.
          example: false
        example: false
        type: boolean
      command:
        description: |-
          Command is the command to run when the container starts.
          example: ["nginx", "-g", "daemon off;"]
        example:
        - nginx
        - -g
        - daemon off;
        items:
          type: string
        type: array
      cpu_limit:
        description: |-
          CPULimit specifies the CPU quota for the container (e.g., 1.5 means 1.5 CPU cores). Docker uses NanoCPUs (1e9 per core).
          example: 1.5
        example: 1.5
        type: number
      entrypoint:
        description: |-
          Entrypoint overrides the default entrypoint of the image.
          example: ["/docker-entrypoint.sh"]
        example:
        - /docker-entrypoint.sh
        items:
          type: string
        type: array
      env:
        description: |-
          Env is a list of environment variables to set in the container (e.g., "VAR=value").
          example: ["NGINX_HOST=example.com", "NGINX_PORT=80"]
        example:
        - NGINX_HOST=example.com
        - NGINX_PORT=80
        items:
          type: string
        type: array
      image:
        description: |-
          Image is the name or ID of the Docker image to use.
          required: true
          example: "nginx:latest"
        example: nginx:latest
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Labels are key-value pairs to apply to the container.
          example: {"environment": "development", "app": "webserver"}
        example:
          app: webserver
          environment: development
        type: object
      memory_limit:
        description: |-
          MemoryLimit is the maximum amount of memory the container can use (in bytes).
          example: 104857600 (100MB)
        example: 104857600
        type: integer
      name:
        description: |-
          Name is the name to assign to the new container.
          required: true
          example: "my-nginx-container"
        example: my-nginx-container
        type: string
      networks:
        description: |-
          Networks is a list of network names or IDs to connect the container to.
          example: ["my-app-network"]
        example:
        - my-app-network
        items:
          type: string
        type: array
      notes:
        description: |-
          Notes are user-defined notes for the container (stored in application DB).
          example: "Main web server container."
        example: Main web server container.
        type: string
      ports:
        description: Ports specifies the port mappings between the host and the container.
        items:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.PortMapping'
        type: array
      privileged:
        description: |-
          Privileged gives the container extended privileges on the host. Use with caution.
          example: false
        example: false
        type: boolean
      restart_policy:
        description: |-
          RestartPolicy defines the container's behavior when it exits.
          example: "unless-stopped"
        enum:
        - "no"
        - on-failure
        - always
        - unless-stopped
        example: unless-stopped
        type: string
      volumes:
        description: Volumes specifies the volume mappings between the host/named
          volumes and the container.
        items:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.VolumeMapping'
        type: array
    required:
    - image
    - name
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerExecCreateRequest:
    description: Configuration for creating a new exec instance in a container.
    properties:
      attach_stderr:
        description: |-
          AttachStderr specifies whether to attach stderr to the exec command.
          example: true
        example: true
        type: boolean
      attach_stdin:
        description: |-
          AttachStdin specifies whether to attach stdin to the exec command.
          example: false
        example: false
        type: boolean
      attach_stdout:
        description: |-
          AttachStdout specifies whether to attach stdout to the exec command.
          example: true
        example: true
        type: boolean
      command:
        description: |-
          Command is the command to execute in the container, with arguments.
          required: true
          example: ["/bin/bash", "-c", "echo hello"]
        example:
        - /bin/bash
        - -c
        - echo hello
        items:
          type: string
        type: array
      detach_keys:
        description: |-
          DetachKeys specifies the key sequence for detaching from the exec session.
          example: "ctrl-p,ctrl-q"
        example: ctrl-p,ctrl-q
        type: string
      env:
        description: |-
          Env specifies environment variables to set in the exec command's environment.
          example: ["VAR1=value1", "VAR2=value2"]
        example:
        - VAR1=value1
        - VAR2=value2
        items:
          type: string
        type: array
      privileged:
        description: |-
          Privileged specifies whether to run the exec command in privileged mode.
          example: false
        example: false
        type: boolean
      tty:
        description: |-
          Tty specifies whether to allocate a pseudo-TTY for the exec command. Required for interactive sessions.
          example: false
        example: false
        type: boolean
      working_dir:
        description: |-
          WorkingDir specifies the working directory inside the container for the exec command.
          example: "/app"
        example: /app
        type: string
    required:
    - command
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerExecResponse:
    description: Details about an exec instance created within a container.
    properties:
      container_id:
        description: |-
          ContainerID is the ID of the container where the exec instance ran.
          required: true
          example: "f7d9e8c7b6a5..."
        example: f7d9e8c7b6a5
        type: string
      created_at:
        description: |-
          CreatedAt is the timestamp when the exec instance was created (Note: Docker API might not provide this directly in inspect).
          example: "2023-10-27T10:00:00Z"
        type: string
      exit_code:
        description: |-
          ExitCode is the exit code of the exec process. Only available after the process has finished.
          example: 0
        example: 0
        type: integer
      id:
        description: |-
          ID is the unique identifier of the exec instance.
          required: true
          example: "a1b2c3d4e5f6..."
        example: a1b2c3d4e5f6
        type: string
      open_stderr:
        description: |-
          OpenStderr indicates if stderr was attached to the process.
          required: true
          example: true
        example: true
        type: boolean
      open_stdin:
        description: |-
          OpenStdin indicates if stdin was attached to the process.
          required: true
          example: false
        example: false
        type: boolean
      open_stdout:
        description: |-
          OpenStdout indicates if stdout was attached to the process.
          required: true
          example: true
        example: true
        type: boolean
      process_config:
        description: ProcessConfig holds the configuration of the process executed.
        properties:
          arguments:
            description: |-
              Arguments are the arguments passed to the command.
              example: ["-c", "echo hello"]
            example:
            - -c
            - echo hello
            items:
              type: string
            type: array
          entrypoint:
            description: |-
              EntryPoint is the entry point for the executed command.
              example: "/bin/sh"
            example: /bin/sh
            type: string
          privileged:
            description: |-
              Privileged indicates if the process ran with elevated privileges.
              example: false
            example: false
            type: boolean
          tty:
            description: |-
              Tty indicates if a TTY was allocated for the process.
              example: false
            example: false
            type: boolean
        type: object
      running:
        description: |-
          Running indicates whether the exec process is currently running.
          required: true
          example: false
        example: false
        type: boolean
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerListResponse:
    description: Contains a list of container details along with pagination information.
    properties:
      containers:
        description: |-
          Containers is the list of container objects returned for the current page.
          required: true
        items:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerResponse'
        type: array
      metadata:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.MetadataResponse'
        description: |-
          Metadata contains pagination and other metadata for the response.
          required: true
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerRenameRequest:
    description: Specifies the new name for an existing container.
    properties:
      name:
        description: |-
          Name is the new name to assign to the container. Must be unique.
          required: true
          example: "my-renamed-nginx"
        example: my-renamed-nginx
        type: string
    required:
    - name
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerResponse:
    description: Contains comprehensive details of a Docker container, including configuration,
      state, and associated resources.
    properties:
      command:
        description: |-
          Command is the command executed when the container started.
          example: "nginx -g daemon off;"
        example: nginx -g daemon off;
        type: string
      container_id:
        description: |-
          ContainerID is the unique identifier assigned by Docker.
          required: true
          example: "f7d9e8c7b6a5..."
        example: f7d9e8c7b6a5
        type: string
      created:
        description: |-
          Created is the timestamp when the container was created by Docker.
          required: true
          example: "2023-10-27T10:00:00Z"
        example: "2023-10-27T10:00:00Z"
        type: string
      created_at:
        description: |-
          CreatedAt is the timestamp when the container record was created in the application database.
          required: true
          example: "2023-10-27T10:00:05Z"
        example: "2023-10-27T10:00:05Z"
        type: string
      finished:
        description: |-
          Finished is the timestamp when the container last finished.
          example: "2023-10-27T11:00:00Z"
        example: "2023-10-27T11:00:00Z"
        type: string
      host_config:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.HostConfigResponse'
        description: HostConfig contains details about the container's host configuration.
      id:
        description: |-
          ID is the internal database ID (if managed by the application).
          example: 101
        example: 101
        type: integer
      image:
        description: |-
          Image is the name of the image used by the container.
          required: true
          example: "nginx:latest"
        example: nginx:latest
        type: string
      image_id:
        description: |-
          ImageID is the ID of the image used by the container.
          required: true
          example: "sha256:a1b2c3d4..."
        example: sha256:a1b2c3d4...
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Labels are the labels applied to the container.
          example: {"environment": "development"}
        example:
          environment: development
        type: object
      name:
        description: |-
          Name is the user-defined name of the container.
          required: true
          example: "my-nginx-container"
        example: my-nginx-container
        type: string
      networks:
        description: Networks lists the network connections for the container.
        items:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkConnectionResponse'
        type: array
      notes:
        description: |-
          Notes are user-defined notes stored in the application database.
          example: "Main web server container."
        example: Main web server container.
        type: string
      platform:
        description: |-
          Platform is the platform string (e.g., "linux/amd64").
          example: "linux/amd64"
        example: linux/amd64
        type: string
      ports:
        description: Ports lists the port mappings for the container.
        items:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.PortMapping'
        type: array
      restart_policy:
        description: |-
          RestartPolicy is the restart policy applied to the container.
          example: "unless-stopped"
        example: unless-stopped
        type: string
      started:
        description: |-
          Started is the timestamp when the container was last started.
          example: "2023-10-27T10:01:00Z"
        example: "2023-10-27T10:01:00Z"
        type: string
      state:
        description: |-
          State is the detailed state string from Docker (e.g., "running", "exited (0)").
          required: true
          example: "running"
        example: running
        type: string
      stats:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerStatsResponse'
        description: Stats contains the latest resource usage statistics (if requested/available).
      status:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerStatus'
        description: |-
          Status is a simplified status string (e.g., running, stopped).
          required: true
          example: "running"
        example: running
      updated_at:
        description: |-
          UpdatedAt is the timestamp when the container record was last updated in the application database.
          required: true
          example: "2023-10-27T10:05:00Z"
        example: "2023-10-27T10:05:00Z"
        type: string
      user_id:
        description: |-
          UserID is the ID of the user who owns/created this container record in the application database.
          required: true
          example: 1
        example: 1
        type: integer
      volumes:
        description: Volumes lists the volume mounts for the container.
        items:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.VolumeMountResponse'
        type: array
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerStats:
    properties:
      block_read:
        type: integer
      block_write:
        type: integer
      cpu_percentage:
        type: number
      cpu_usage:
        type: integer
      memory_limit:
        type: integer
      memory_max_usage:
        type: integer
      memory_percentage:
        type: number
      memory_usage:
        type: integer
      network_rx:
        type: integer
      network_tx:
        type: integer
      online_cpus:
        type: integer
      pids:
        type: integer
      system_cpu_usage:
        type: integer
      time:
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerStatsResponse:
    description: Snapshot of CPU, memory, network, and block I/O usage for a container.
    properties:
      block_read:
        description: |-
          BlockRead is the total bytes read from block devices by the container.
          required: true
          example: 204800
        example: 204800
        type: integer
      block_write:
        description: |-
          BlockWrite is the total bytes written to block devices by the container.
          required: true
          example: 102400
        example: 102400
        type: integer
      cpu_percentage:
        description: |-
          CPUPercentage is the container's CPU usage percentage across all cores.
          required: true
          example: 12.34
        example: 12.34
        type: number
      memory_limit:
        description: |-
          MemoryLimit is the memory limit for the container in bytes.
          required: true
          example: 104857600
        example: 104857600
        type: integer
      memory_percentage:
        description: |-
          MemoryPercentage is the current memory usage as a percentage of the limit.
          required: true
          example: 50.0
        example: 50
        type: number
      memory_usage:
        description: |-
          MemoryUsage is the current memory usage in bytes.
          required: true
          example: 52428800
        example: 52428800
        type: integer
      network_rx:
        description: |-
          NetworkRx is the total bytes received over the network by the container.
          required: true
          example: 1024000
        example: 1024000
        type: integer
      network_tx:
        description: |-
          NetworkTx is the total bytes transmitted over the network by the container.
          required: true
          example: 512000
        example: 512000
        type: integer
      pids:
        description: |-
          PIDs is the number of processes currently running in the container.
          required: true
          example: 5
        example: 5
        type: integer
      timestamp:
        description: |-
          Timestamp is the time when the stats were collected.
          required: true
          example: "2023-10-27T10:15:00Z"
        example: "2023-10-27T10:15:00Z"
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerStatus:
    enum:
    - running
    - stopped
    - created
    - paused
    - restarting
    - removing
    - exited
    - dead
    - unknown
    type: string
    x-enum-varnames:
    - ContainerStatusRunning
    - ContainerStatusStopped
    - ContainerStatusCreated
    - ContainerStatusPaused
    - ContainerStatusRestarting
    - ContainerStatusRemoving
    - ContainerStatusExited
    - ContainerStatusDead
    - ContainerStatusUnknown
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.DeploymentInfo:
    description: Detailed status of a Compose project, including its services and
      any ongoing operations.
    properties:
      error:
        description: |-
          Error contains the last error message associated with the deployment, if any.
          example: "Failed to pull image 'nonexistent:latest'"
        type: string
      operation:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.OperationInfo'
        description: Operation describes the currently active operation (e.g., up,
          down), if any.
      projectName:
        description: |-
          ProjectName is the name of the Compose project.
          required: true
          example: "my-web-app"
        type: string
      services:
        additionalProperties:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ServiceInfo'
        description: |-
          Services maps service names to their detailed status information.
          required: true
        type: object
      startTime:
        description: |-
          StartTime is the timestamp when the deployment was first tracked or started.
          required: true
          example: "2023-10-27T10:00:00Z"
        type: string
      status:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.DeploymentStatus'
        description: |-
          Status is the overall status of the deployment.
          required: true
          example: "running"
      updateTime:
        description: |-
          UpdateTime is the timestamp when the deployment status was last updated.
          required: true
          example: "2023-10-27T10:05:00Z"
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.DeploymentStatus:
    enum:
    - unknown
    - pending
    - deploying
    - running
    - partial
    - stopping
    - stopped
    - removing
    - removed
    - failed
    type: string
    x-enum-varnames:
    - DeploymentStatusUnknown
    - DeploymentStatusPending
    - DeploymentStatusDeploying
    - DeploymentStatusRunning
    - DeploymentStatusPartial
    - DeploymentStatusStopping
    - DeploymentStatusStopped
    - DeploymentStatusRemoving
    - DeploymentStatusRemoved
    - DeploymentStatusFailed
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.DetailedNetwork:
    properties:
      driver:
        type: string
      id:
        type: string
      internal:
        type: boolean
      ipam_config:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.IPAM'
        description: Use local models.IPAM
      labels:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.JSONMap'
      name:
        type: string
      options:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.JSONMap'
      scope:
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.DetailedVolume:
    properties:
      driver:
        type: string
      labels:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.JSONMap'
      mountpoint:
        type: string
      name:
        type: string
      options:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.JSONMap'
      scope:
        type: string
      status:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.JSONMap'
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.EndpointIPAMConfigRequest:
    description: Specifies static IP addresses for a container's network endpoint.
    properties:
      ipv4_address:
        description: |-
          IPv4Address is the static IPv4 address to assign to the container.
          example: 172.28.5.10
        example: 172.20.10.5
        type: string
      ipv6_address:
        description: |-
          IPv6Address is the static IPv6 address to assign to the container.
          example: "2001:db8:abcd::10"
        example: 2001:db8:abcd::5
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.EndpointSettingsRequest:
    description: Configuration for the container's endpoint within the network.
    properties:
      aliases:
        description: |-
          Aliases are network-scoped aliases for the container.
          example: ["web", "frontend"]
        example:
        - app
        - web
        items:
          type: string
        type: array
      ipam_config:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.EndpointIPAMConfigRequest'
        description: IPAMConfig allows specifying a static IP address for the container
          in this network.
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorInfo:
    description: Detailed information about an error that occurred during an API request.
    properties:
      code:
        description: |-
          Code is a machine-readable error code identifying the specific error type.
          required: true
          example: RESOURCE_NOT_FOUND
        example: RESOURCE_NOT_FOUND
        type: string
      details:
        description: |-
          Details provides optional additional information about the error, such as validation failures.
          example: {"field": "command", "error": "cannot be empty"}
      message:
        description: |-
          Message is a human-readable description of the error.
          required: true
          example: The requested container was not found.
        example: The requested container was not found.
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse:
    description: Standard structure for returning errors from the API.
    properties:
      error:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorInfo'
        description: |-
          Error contains the detailed error information.
          required: true
      meta:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.MetadataResponse'
        description: |-
          Meta contains metadata about the response.
          required: true
      success:
        description: |-
          Success indicates if the request was successful (always false for errors).
          required: true
          example: false
        example: false
        type: boolean
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.HealthInfo:
    description: Details about the health status based on Docker health checks.
    properties:
      failingStreak:
        description: |-
          FailingStreak is the number of consecutive failed health checks.
          required: true
          example: 0
        type: integer
      log:
        description: Log contains recent health check probe results.
        items:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.HealthLogEntry'
        type: array
      status:
        description: |-
          Status indicates the current health status (e.g., "healthy", "unhealthy", "starting").
          required: true
          example: "healthy"
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.HealthLogEntry:
    description: Log entry detailing the outcome of one health check attempt.
    properties:
      end:
        description: |-
          End is the timestamp when the health check probe ended.
          required: true
          example: "2023-10-27T10:05:51Z"
        type: string
      exitCode:
        description: |-
          ExitCode is the exit code of the health check command. 0 typically indicates success.
          required: true
          example: 0
        type: integer
      output:
        description: |-
          Output contains the stdout/stderr output from the health check command.
          example: "OK"
        type: string
      start:
        description: |-
          Start is the timestamp when the health check probe started.
          required: true
          example: "2023-10-27T10:05:50Z"
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.HostConfigResponse:
    description: Key host configuration settings applied to the container.
    properties:
      blkio_weight:
        description: |-
          BlkioWeight is the block I/O weight (relative weight).
          example: 500
        example: 500
        type: integer
      cap_add:
        description: |-
          CapAdd lists the capabilities added to the container.
          example: ["NET_ADMIN"]
        example:
        - NET_ADMIN
        items:
          type: string
        type: array
      cap_drop:
        description: |-
          CapDrop lists the capabilities dropped from the container.
          example: ["MKNOD"]
        example:
        - MKNOD
        items:
          type: string
        type: array
      cpu_period:
        description: |-
          CPUPeriod is the CPU CFS period in microseconds.
          example: 100000
        example: 100000
        type: integer
      cpu_quota:
        description: |-
          CPUQuota is the CPU CFS quota in microseconds.
          example: 50000
        example: 50000
        type: integer
      cpu_shares:
        description: |-
          CPUShares is the relative CPU weight (vs. other containers).
          example: 1024
        example: 1024
        type: integer
      cpuset_cpus:
        description: |-
          CpusetCpus specifies the CPUs the container can use (e.g., "0-3", "0,1").
          example: "0,1"
        example: 0,1
        type: string
      cpuset_mems:
        description: |-
          CpusetMems specifies the memory nodes the container can use.
          example: "0"
        example: "0"
        type: string
      memory:
        description: |-
          Memory is the memory limit in bytes. 0 means no limit.
          example: 104857600
        example: 104857600
        type: integer
      memory_swap:
        description: |-
          MemorySwap is the total memory (memory + swap). -1 means unlimited swap.
          example: -1
        example: -1
        type: integer
      network_mode:
        description: |-
          NetworkMode is the network mode used by the container (e.g., "bridge", "host").
          required: true
          example: "bridge"
        example: bridge
        type: string
      privileged:
        description: |-
          Privileged indicates if the container runs in privileged mode.
          required: true
          example: false
        example: false
        type: boolean
      readonly_rootfs:
        description: |-
          ReadonlyRootfs indicates if the container's root filesystem is read-only.
          required: true
          example: false
        example: false
        type: boolean
      restart_policy:
        description: |-
          RestartPolicy is the full restart policy string (e.g., "unless-stopped").
          required: true
          example: "unless-stopped"
        example: unless-stopped
        type: string
      security_opt:
        description: |-
          SecurityOpt lists the security options applied to the container.
          example: ["seccomp=unconfined"]
        example:
        - seccomp=unconfined
        items:
          type: string
        type: array
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.IPAM:
    properties:
      config:
        items:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.IPAMConfig'
        type: array
      driver:
        type: string
      options:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.JSONMap'
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.IPAMConfig:
    properties:
      aux_address:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.JSONMap'
      gateway:
        type: string
      ip_range:
        type: string
      subnet:
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageBuildResponse:
    description: Provides details about the image build process, including logs and
      timing.
    properties:
      duration:
        description: |-
          Duration is the total duration of the build process in a human-readable format.
          required: true
          example: "5m0s"
        type: string
      end_time:
        description: |-
          EndTime is the timestamp when the build process finished.
          required: true
          example: "2023-10-27T11:05:00Z"
        type: string
      error_detail:
        description: |-
          ErrorDetail contains specific error information if the build failed.
          example: "failed to solve: rpc error: code = Unknown desc = executor failed running..."
        type: string
      image_id:
        description: |-
          ImageID is the Docker Image ID (SHA256 digest) of the built image, if successful.
          example: "sha256:c3d4e5f6..."
        example: sha256:b1c2d3e4...
        type: string
      logs:
        description: Logs contains the output stream from the Docker build process.
        items:
          type: string
        type: array
      repository:
        description: |-
          Repository is the repository name used for tagging.
          example: "my-custom-app"
        type: string
      start_time:
        description: |-
          StartTime is the timestamp when the build process started.
          required: true
          example: "2023-10-27T11:00:00Z"
        type: string
      success:
        description: |-
          Success indicates if the build operation completed successfully (may not mean the image is usable if errors occurred during build).
          required: true
          example: true
        type: boolean
      tag:
        description: |-
          Tag is the tag applied to the built image.
          example: "v1.1"
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageDeleteResponseItem:
    properties:
      deleted:
        example: sha256:a1b2c3d4...
        type: string
      untagged:
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageHistoryItem:
    description: 'Details about a specific layer, including how it was created and
      its size. (Note: This is functionally the same as ImageHistoryResponse but used
      for clarity in some contexts).'
    properties:
      comment:
        description: |-
          Comment is an optional comment associated with the layer creation.
          example: "Added base filesystem"
        type: string
      created:
        description: |-
          Created is the timestamp when this layer was created.
          required: true
          example: "2023-10-26T13:50:00Z"
        example: "2023-09-15T14:00:00Z"
        type: string
      created_by:
        description: |-
          CreatedBy is the command used to create this layer.
          required: true
          example: "/bin/sh -c #(nop) ADD file:abc in /"
        example: '/bin/sh -c #(nop) CMD ["nginx" "-g" "daemon off;"]'
        type: string
      id:
        description: |-
          ID is the identifier for this history record (often the layer ID or <missing>).
          required: true
          example: "sha256:b1c2d3e4..."
        example: sha256:a1b2c3d4...
        type: string
      size:
        description: |-
          Size is the size of this layer in bytes.
          required: true
          example: 5242880
        example: 0
        type: integer
      size_human:
        description: |-
          SizeHuman is the size of this layer in a human-readable format.
          required: true
          example: "5MB"
        type: string
      tags:
        description: Tags lists the tags associated with this specific history entry
          (usually empty).
        items:
          type: string
        type: array
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageHistoryResponse:
    description: Details about a specific layer, including how it was created and
      its size.
    properties:
      comment:
        description: |-
          Comment is an optional comment associated with the layer creation.
          example: "Added base filesystem"
        type: string
      created:
        description: |-
          Created is the timestamp when this layer was created.
          required: true
          example: "2023-10-26T13:50:00Z"
        example: "2023-09-15T14:00:00Z"
        type: string
      created_by:
        description: |-
          CreatedBy is the command used to create this layer.
          required: true
          example: "/bin/sh -c #(nop) ADD file:abc in /"
        example: '/bin/sh -c #(nop) CMD ["nginx" "-g" "daemon off;"]'
        type: string
      id:
        description: |-
          ID is the identifier for this history record (often the layer ID or <missing>).
          required: true
          example: "sha256:b1c2d3e4..."
        example: sha256:a1b2c3d4...
        type: string
      size:
        description: |-
          Size is the size of this layer in bytes.
          required: true
          example: 5242880
        type: integer
      size_human:
        description: |-
          SizeHuman is the size of this layer in a human-readable format.
          required: true
          example: "5MB"
        type: string
      tags:
        description: Tags lists the tags associated with this specific history entry
          (usually empty).
        items:
          type: string
        type: array
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageListResponse:
    description: Contains a list of image details along with pagination information.
    properties:
      images:
        description: |-
          Images is the list of image objects returned for the current page.
          required: true
        items:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageResponse'
        type: array
      metadata:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.MetadataResponse'
        description: |-
          Metadata contains pagination and other metadata for the response.
          required: true
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImagePullRequest:
    description: Specifies the image to pull and optional credentials for private
      registries.
    properties:
      credentials:
        description: Credentials contains optional username and password for authenticating
          with a private registry.
        properties:
          password:
            description: |-
              Password or access token for the private registry.
              example: "mysecretpassword"
            example: mysecretpassword
            type: string
          username:
            description: |-
              Username for the private registry.
              example: "dockerhub_user"
            example: dockerhub_user
            type: string
        type: object
      image:
        description: |-
          Image is the name of the image to pull (e.g., "nginx", "myregistry.com/myapp").
          required: true
          example: "nginx"
        example: nginx
        type: string
      tag:
        description: |-
          Tag is the specific tag of the image to pull. Defaults to "latest" if omitted.
          example: "1.21-alpine"
        example: 1.21-alpine
        type: string
    required:
    - image
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImagePullResponse:
    description: Provides details about the image that was pulled.
    properties:
      created_at:
        description: |-
          CreatedAt is the creation timestamp of the pulled image (from image inspect).
          example: "2023-10-26T14:00:00Z"
        type: string
      id:
        description: |-
          ID is the Docker Image ID (SHA256 digest) of the pulled image.
          example: "sha256:a1b2c3d4..."
        type: string
      image:
        description: |-
          Image is the full name (repo:tag) of the image that was pulled.
          required: true
          example: "nginx:latest"
        type: string
      size:
        description: |-
          Size is the size of the pulled image in bytes.
          example: 135234567
        type: integer
      success:
        description: |-
          Success indicates if the pull operation was successful (note: Docker pull itself doesn't return success/fail easily, this might be application-level).
          required: true
          example: true
        type: boolean
      time:
        description: |-
          Time is the timestamp when the pull operation completed on the server.
          required: true
          example: "2023-10-27T10:30:00Z"
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageRemoveResponse:
    description: 'Summarizes the outcome of removing an image, including untagged
      and deleted layers. Note: This structure might need adjustment based on the
      actual Docker API response format for removal.'
    properties:
      deleted:
        description: |-
          Deleted is the count of deleted image layers/references.
          example: 5
        type: integer
      items:
        description: |-
          Items provides details on untagged or deleted items (structure may vary based on Docker API).
          example: [{"Untagged": "myimage:latest"}, {"Deleted": "sha256:a1b2..."}]
        items:
          additionalProperties: true
          type: object
        type: array
      space_reclaimed:
        description: |-
          SpaceReclaimed is the total disk space freed in bytes.
          example: 150000000
        type: integer
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageResponse:
    description: Contains comprehensive details of a Docker image, including tags,
      size, and history.
    properties:
      architecture:
        description: |-
          Architecture is the CPU architecture the image was built for.
          example: "amd64"
        example: amd64
        type: string
      author:
        description: |-
          Author is the author specified in the image metadata.
          example: "Nginx Maintainers <nginx-devel@nginx.org>"
        type: string
      containers:
        description: |-
          Containers lists the IDs of containers currently using this image.
          example: ["f7d9e8c7b6a5"]
        items:
          type: string
        type: array
      created:
        description: |-
          Created is the timestamp when the image was created.
          required: true
          example: "2023-10-26T14:00:00Z"
        example: "2023-09-15T14:00:00Z"
        type: string
      created_at:
        description: |-
          CreatedAt is the timestamp when the image record was created in the application database.
          example: "2023-10-27T09:00:00Z"
        type: string
      digest:
        description: |-
          Digest is the repository digest (SHA256) if available.
          example: "sha256:f6d669c..."
        type: string
      history:
        description: History provides details about the layers that make up the image.
        items:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageHistoryResponse'
        type: array
      id:
        description: |-
          ID is the internal database ID (if managed by the application).
          example: 25
        type: integer
      image_id:
        description: |-
          ImageID is the unique identifier assigned by Docker (SHA256 digest).
          required: true
          example: "sha256:a1b2c3d4e5f6..."
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Labels are the labels applied to the image.
          example: {"maintainer": "Nginx Maintainers"}
        type: object
      name:
        description: |-
          Name is the primary repository:tag associated with the image.
          example: "nginx:latest"
        type: string
      notes:
        description: |-
          Notes are user-defined notes stored in the application database.
          example: "Base image for web servers."
        type: string
      os:
        description: |-
          OS is the operating system the image was built for.
          example: "linux"
        type: string
      repository:
        description: |-
          Repository is the repository part of the image name.
          example: "nginx"
        type: string
      size:
        description: |-
          Size is the total size of the image layers in bytes.
          required: true
          example: 135234567
        example: 133000000
        type: integer
      size_human:
        description: |-
          SizeHuman is the total size in a human-readable format.
          required: true
          example: "129MB"
        type: string
      tag:
        description: |-
          Tag is the tag part of the image name.
          example: "latest"
        type: string
      updated_at:
        description: |-
          UpdatedAt is the timestamp when the image record was last updated in the application database.
          example: "2023-10-27T09:05:00Z"
        type: string
      user_id:
        description: |-
          UserID is the ID of the user who owns/created this image record in the application database.
          example: 1
        type: integer
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageTagRequest:
    description: Specifies the source image and the new repository/tag to apply.
    properties:
      repository:
        description: |-
          Repository is the repository name for the new tag.
          required: true
          example: "my-custom-nginx"
        example: my-custom-nginx
        type: string
      source_image:
        description: |-
          SourceImage is the ID or current name:tag of the image to tag.
          required: true
          example: "nginx:latest" or "sha256:a1b2c3d4..."
        example: nginx:latest
        type: string
      tag:
        description: |-
          Tag is the tag name for the new tag.
          required: true
          example: "v1.0"
        example: v1.0
        type: string
    required:
    - repository
    - source_image
    - tag
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.JSONMap:
    additionalProperties: true
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.LoginRequest:
    description: Credentials required for user login.
    properties:
      email:
        description: |-
          Email is the user's registered email address.
          required: true
          example: user@example.com
        example: user@example.com
        type: string
      password:
        description: |-
          Password is the user's password.
          required: true
          example: StrongP@ssw0rd!
        example: StrongP@ssw0rd!
        type: string
    required:
    - email
    - password
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.MetadataResponse:
    properties:
      pagination:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.PaginationResponse'
      request_id:
        example: req-12345
        type: string
      timestamp:
        example: "2023-10-27T10:30:00Z"
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.MountPoint:
    properties:
      destination:
        type: string
      mode:
        type: string
      name:
        type: string
      propagation:
        type: string
      rw:
        type: boolean
      source:
        type: string
      type:
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkConnectRequest:
    description: Specifies the container and optional endpoint settings for connecting
      to a network.
    properties:
      container:
        description: |-
          Container is the ID or name of the container to connect.
          required: true
          example: my-web-container
        example: my-app-container
        type: string
      endpoint_config:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.EndpointSettingsRequest'
        description: EndpointConfig provides custom network settings for the container
          within this network.
    required:
    - container
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkConnectionResponse:
    description: Information about a container's endpoint within a Docker network.
    properties:
      aliases:
        description: |-
          Aliases are network-scoped aliases for the container within this network.
          example: ["nginx", "webserver"]
        example:
        - nginx
        - webserver
        items:
          type: string
        type: array
      gateway:
        description: |-
          Gateway is the gateway address for this network connection.
          example: "172.28.0.1"
        example: 172.28.0.1
        type: string
      ip_address:
        description: |-
          IPAddress is the IPv4 address assigned to the container within this network.
          example: "172.28.0.3"
        example: 172.28.0.3
        type: string
      mac_address:
        description: |-
          MacAddress is the MAC address assigned to the container's endpoint in this network.
          example: "02:42:ac:1c:00:03"
        example: 02:42:ac:1c:00:03
        type: string
      network_id:
        description: |-
          NetworkID is the ID of the network the container is connected to.
          required: true
          example: "b7cda8f3e9a1..."
        example: b7cda8f3e9a1
        type: string
      network_name:
        description: |-
          NetworkName is the name of the network.
          required: true
          example: "my-app-network"
        example: my-app-network
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkContainerResponse:
    description: Information about a specific container's endpoint within a network.
    properties:
      aliases:
        description: |-
          Aliases are network-scoped aliases for the container within this network.
          example: ["web", "frontend"]
        items:
          type: string
        type: array
      endpoint_id:
        description: |-
          EndpointID is the ID of the network endpoint for this container.
          required: true
          example: "ep-a1b2c3d4e5f6..."
        example: ep-a1b2c3d4...
        type: string
      ipv4_address:
        description: |-
          IPv4Address is the IPv4 address assigned to the container's endpoint.
          example: "172.28.0.2"
        type: string
      ipv6_address:
        description: |-
          IPv6Address is the IPv6 address assigned to the container's endpoint.
          example: "2001:db8:abcd::2"
        type: string
      mac_address:
        description: |-
          MacAddress is the MAC address assigned to the container's endpoint.
          required: true
          example: "02:42:ac:1c:00:02"
        example: 02:42:ac:1c:00:03
        type: string
      name:
        description: |-
          Name is the name of the connected container.
          required: true
          example: "my-web-container"
        example: my-app-container
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkCreateRequest:
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkDisconnectRequest:
    description: Specifies the container to disconnect from a network.
    properties:
      container:
        description: |-
          Container is the ID or name of the container to disconnect.
          required: true
          example: my-web-container
        example: my-app-container
        type: string
      force:
        description: |-
          Force disconnects the container even if it is running.
          example: false
        example: false
        type: boolean
    required:
    - container
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkMode:
    enum:
    - none
    - bridge
    - host
    - container
    type: string
    x-enum-varnames:
    - NetworkModeNone
    - NetworkModeBridge
    - NetworkModeHost
    - NetworkModeContainer
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkResponse:
    description: Contains comprehensive details of a Docker network, including configuration
      and connected containers.
    properties:
      attachable:
        description: |-
          Attachable indicates if non-service containers can attach to the network.
          required: true
          example: true
        example: true
        type: boolean
      config_only:
        description: |-
          ConfigOnly indicates if the network configuration is only used for services.
          required: true
          example: false
        example: false
        type: boolean
      containers:
        additionalProperties:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkContainerResponse'
        description: Containers lists the containers connected to this network and
          their endpoint details.
        type: object
      created:
        description: |-
          Created is the timestamp when the network was created by Docker.
          required: true
          example: "2023-10-27T09:00:00Z"
        example: "2023-10-25T09:00:00Z"
        type: string
      created_at:
        description: |-
          CreatedAt is the timestamp when the network record was created in the application database.
          example: "2023-10-27T09:05:00Z"
        type: string
      driver:
        description: |-
          Driver is the network driver used (e.g., bridge, overlay).
          required: true
          example: "bridge"
        example: bridge
        type: string
      enable_ipv6:
        description: |-
          EnableIPv6 indicates if IPv6 is enabled for the network.
          required: true
          example: false
        example: false
        type: boolean
      gateway:
        description: |-
          Gateway is the IPv4 gateway for the network's subnet.
          example: "172.28.0.1"
        type: string
      id:
        description: |-
          ID is the internal database ID (if managed by the application).
          example: 5
        type: integer
      ingress:
        description: |-
          Ingress indicates if the network provides the routing-mesh in swarm mode.
          required: true
          example: false
        example: false
        type: boolean
      internal:
        description: |-
          Internal indicates if the network is internal (restricts external access).
          required: true
          example: false
        example: false
        type: boolean
      ip_range:
        description: |-
          IPRange is the range of IPs available within the subnet.
          example: "172.28.5.0/24"
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Labels are the labels applied to the network.
          example: {"environment": "production"}
        type: object
      name:
        description: |-
          Name is the user-defined name of the network.
          required: true
          example: "my-app-network"
        example: my-app-network
        type: string
      network_id:
        description: |-
          NetworkID is the unique identifier assigned by Docker.
          required: true
          example: "b7cda8f3e9a1..."
        type: string
      notes:
        description: |-
          Notes are user-defined notes stored in the application database.
          example: "Main network for the web application stack."
        type: string
      options:
        additionalProperties:
          type: string
        description: |-
          Options are driver-specific options for the network.
          example: {"com.docker.network.bridge.name": "mybridge0"}
        type: object
      scope:
        description: |-
          Scope indicates the scope of the network (e.g., local, swarm).
          required: true
          example: "local"
        example: local
        type: string
      subnet:
        description: |-
          Subnet is the primary IPv4 subnet for the network in CIDR notation.
          example: "172.28.0.0/16"
        type: string
      updated_at:
        description: |-
          UpdatedAt is the timestamp when the network record was last updated in the application database.
          example: "2023-10-27T09:10:00Z"
        type: string
      user_id:
        description: |-
          UserID is the ID of the user who owns/created this network record in the application database.
          example: 1
        type: integer
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.OperationInfo:
    description: Details about a long-running operation like 'up', 'down', 'start',
      etc.
    properties:
      details:
        additionalProperties: true
        description: |-
          Details provides additional context or progress information about the operation.
          example: {"step": "Creating service web", "progress": 0.5}
        type: object
      endTime:
        description: |-
          EndTime is the timestamp when the operation finished (only present if Status is 'complete' or 'failed').
          example: "2023-10-27T10:05:15Z"
        type: string
      error:
        description: |-
          Error contains the error message if the operation failed.
          example: "Failed to create service 'db': network 'shared' not found"
        type: string
      startTime:
        description: |-
          StartTime is the timestamp when the operation began.
          required: true
          example: "2023-10-27T10:04:30Z"
        type: string
      status:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.OperationStatus'
        description: |-
          Status indicates the current status of the operation.
          required: true
          example: "in_progress"
      type:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.OperationType'
        description: |-
          Type indicates the type of operation being performed.
          required: true
          example: "up"
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.OperationStatus:
    enum:
    - pending
    - in_progress
    - complete
    - failed
    type: string
    x-enum-varnames:
    - OperationStatusPending
    - OperationStatusInProgress
    - OperationStatusComplete
    - OperationStatusFailed
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.OperationType:
    enum:
    - up
    - down
    - start
    - stop
    - restart
    - pull
    - build
    - create
    - remove
    - scale
    type: string
    x-enum-varnames:
    - OperationTypeUp
    - OperationTypeDown
    - OperationTypeStart
    - OperationTypeStop
    - OperationTypeRestart
    - OperationTypePull
    - OperationTypeBuild
    - OperationTypeCreate
    - OperationTypeRemove
    - OperationTypeScale
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.PaginatedResponse:
    properties:
      data:
        description: Should hold the slice of items
      meta:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.MetadataResponse'
      success:
        example: true
        type: boolean
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.PaginationResponse:
    properties:
      page:
        example: 1
        type: integer
      page_size:
        example: 10
        type: integer
      total_items:
        example: 42
        type: integer
      total_pages:
        example: 5
        type: integer
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.PingResponse:
    properties:
      api_version:
        type: string
      builder_version:
        type: string
      experimental:
        type: boolean
      os_type:
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.PortMapping:
    description: Defines how a container port is exposed on the host machine.
    properties:
      container_port:
        description: |-
          ContainerPort is the port number inside the container.
          required: true
          example: "80"
        type: string
      host_ip:
        description: |-
          HostIP is the IP address on the host to bind the port to. Defaults to 0.0.0.0 (all interfaces).
          example: "127.0.0.1"
        type: string
      host_port:
        description: |-
          HostPort is the port number on the host. If empty or "0", Docker assigns a random ephemeral port.
          example: "8080"
        type: string
      type:
        description: |-
          Type is the protocol (e.g., "tcp", "udp", "sctp"). Defaults to "tcp".
          example: "tcp"
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.Process:
    properties:
      command:
        type: string
      cpu:
        type: string
      memory:
        type: string
      pid:
        type: integer
      time:
        type: string
      user:
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.RefreshTokenRequest:
    description: Contains the refresh token needed to obtain a new access token.
    properties:
      refresh_token:
        description: |-
          RefreshToken is the valid refresh token previously issued to the user.
          required: true
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9... (long token string)
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    required:
    - refresh_token
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.RegisterRequest:
    description: Data required for registering a new user account.
    properties:
      email:
        description: |-
          Email is the user's email address, used for login.
          required: true
          example: user@example.com
        example: user@example.com
        type: string
      invite_code:
        description: |-
          InviteCode is an optional code required for registration if the system is configured for invite-only.
          example: ABC-123
        example: ABC-123
        type: string
      name:
        description: |-
          Name is the user's display name.
          required: true
          example: John Doe
        example: John Doe
        type: string
      password:
        description: |-
          Password is the user's desired password (min 8 characters).
          required: true
          example: StrongP@ssw0rd!
        example: StrongP@ssw0rd!
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ResourceLimits:
    properties:
      blkio_weight:
        type: integer
      cpu_period:
        type: integer
      cpu_quota:
        type: integer
      cpu_shares:
        type: integer
      cpuset_cpus:
        type: string
      cpuset_mems:
        type: string
      memory:
        type: integer
      memory_reservation:
        type: integer
      memory_swap:
        type: integer
      pids_limit:
        type: integer
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.RestartPolicy:
    enum:
    - "no"
    - always
    - on-failure
    - unless-stopped
    type: string
    x-enum-varnames:
    - RestartPolicyNo
    - RestartPolicyAlways
    - RestartPolicyOnFailure
    - RestartPolicyUnlessStopped
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.SecurityInfo:
    properties:
      cap_add:
        items:
          type: string
        type: array
      cap_drop:
        items:
          type: string
        type: array
      ipc_mode:
        type: string
      network_mode:
        type: string
      pid_mode:
        type: string
      privileged:
        type: boolean
      read_only_rootfs:
        type: boolean
      security_opt:
        items:
          type: string
        type: array
      sensitive_mounts:
        items:
          type: string
        type: array
      userns_mode:
        type: string
      uts_mode:
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ServiceInfo:
    description: Detailed status of a single service, including its containers and
      health.
    properties:
      containerIDs:
        description: |-
          ContainerIDs lists the Docker container IDs associated with this service instance(s).
          example: ["f7d9e8c7b6a5", "a1b2c3d4e5f6"]
        items:
          type: string
        type: array
      error:
        description: |-
          Error contains the last error message associated with the service, if any.
          example: "Container exited with code 1"
        type: string
      health:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.HealthInfo'
        description: Health provides details about the service's health check status,
          if configured.
      name:
        description: |-
          Name is the name of the service as defined in the Compose file.
          required: true
          example: "web"
        type: string
      startTime:
        description: |-
          StartTime is the timestamp when the service (or its first container) was started.
          required: true
          example: "2023-10-27T10:01:00Z"
        type: string
      status:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ServiceStatus'
        description: |-
          Status is the current status of the service.
          required: true
          example: "running"
      updateTime:
        description: |-
          UpdateTime is the timestamp when the service status was last updated.
          required: true
          example: "2023-10-27T10:06:00Z"
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.ServiceStatus:
    enum:
    - unknown
    - pending
    - creating
    - starting
    - created
    - running
    - paused
    - restarting
    - stopping
    - removing
    - stopped
    - exited
    - dead
    - failed
    - complete
    - removed
    - unhealthy
    - partial
    - scaling_up
    - scaling_down
    type: string
    x-enum-comments:
      ServiceStatusCreated: Added constant
      ServiceStatusPartial: Added constant
      ServiceStatusStarting: Added constant
      ServiceStatusStopped: Added constant
      ServiceStatusStopping: Added constant
      ServiceStatusUnhealthy: Added constant
    x-enum-varnames:
    - ServiceStatusUnknown
    - ServiceStatusPending
    - ServiceStatusCreating
    - ServiceStatusStarting
    - ServiceStatusCreated
    - ServiceStatusRunning
    - ServiceStatusPaused
    - ServiceStatusRestarting
    - ServiceStatusStopping
    - ServiceStatusRemoving
    - ServiceStatusStopped
    - ServiceStatusExited
    - ServiceStatusDead
    - ServiceStatusFailed
    - ServiceStatusComplete
    - ServiceStatusRemoved
    - ServiceStatusUnhealthy
    - ServiceStatusPartial
    - ServiceStatusScalingUp
    - ServiceStatusScalingDown
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse:
    properties:
      data:
        description: Use omitempty if data might be nil/empty
      message:
        description: Optional success message
        type: string
      meta:
        $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.MetadataResponse'
      success:
        example: true
        type: boolean
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.SystemInfoResponse:
    properties:
      api_version:
        type: string
      architecture:
        example: aarch64
        type: string
      bridge_nf_ip6tables:
        type: boolean
      bridge_nf_iptables:
        type: boolean
      cgroup_driver:
        type: string
      cgroup_version:
        type: string
      containers_paused:
        type: integer
      containers_running:
        type: integer
      containers_stopped:
        type: integer
      cpu_cfs_period:
        type: boolean
      cpu_cfs_quota:
        type: boolean
      cpu_set:
        type: boolean
      cpu_shares:
        type: boolean
      cpus:
        type: integer
      debug:
        type: boolean
      debug0:
        type: boolean
      docker_root_dir:
        type: string
      driver:
        example: overlay2
        type: string
      driver_status:
        items:
          items:
            type: string
          type: array
        type: array
      experimental_build:
        type: boolean
      http_proxy:
        type: string
      https_proxy:
        type: string
      id:
        example: system-id-123
        type: string
      images:
        example: 50
        type: integer
      ipv4_forwarding:
        type: boolean
      kernel_memory:
        type: boolean
      kernel_memory_tcp:
        type: boolean
      kernel_version:
        example: 5.15.0-87-generic
        type: string
      live_restore_enabled:
        type: boolean
      logging_driver:
        type: string
      memory:
        type: integer
      memory_human:
        type: string
      memory_limit:
        type: boolean
      n_events_listener:
        type: integer
      n_fd:
        type: integer
      n_goroutines:
        type: integer
      name:
        type: string
      no_proxy:
        type: string
      oom_kill_disable:
        type: boolean
      operating_system:
        example: Docker Desktop
        type: string
      os_type:
        type: string
      pids_limit:
        type: boolean
      registry_config:
        additionalProperties: true
        type: object
      security_options:
        items:
          type: string
        type: array
      server_time:
        type: string
      server_version:
        example: 24.0.5
        type: string
      swap_limit:
        type: boolean
      system_time:
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.SystemPruneRequest:
    properties:
      build_cache:
        description: Prune build cache
        example: true
        type: boolean
      containers:
        description: Prune containers
        example: true
        type: boolean
      filters:
        additionalProperties:
          type: string
        description: 'Filters to apply (e.g., {"label": ["key=value"]}) - Note: Docker
          API uses map[string][]string, adjust if needed'
        example:
          label: mylabel=myvalue
        type: object
      images:
        description: Prune images
        example: false
        type: boolean
      networks:
        description: Prune networks
        example: true
        type: boolean
      volumes:
        description: Prune volumes
        example: true
        type: boolean
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.SystemPruneResponse:
    properties:
      build_cache_deleted:
        description: Keep this field
        items:
          type: string
        type: array
      containers_deleted:
        description: Renamed from ContainersPruned
        items:
          type: string
        type: array
      images_deleted:
        description: Renamed from ImagesPruned, changed type
        items:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageDeleteResponseItem'
        type: array
      networks_deleted:
        description: Renamed from NetworksPruned
        items:
          type: string
        type: array
      space_reclaimed:
        type: integer
      volumes_deleted:
        description: Renamed from VolumesPruned
        items:
          type: string
        type: array
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.TokenResponse:
    description: Contains the JWT access and refresh tokens along with user details.
    properties:
      access_token:
        description: |-
          AccessToken is the JWT token used for authenticating subsequent requests.
          required: true
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9... (long token string)
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      expires_at:
        description: |-
          ExpiresAt is the exact timestamp when the access token expires.
          required: true
          example: 2023-10-27T11:00:00Z
        example: "2023-10-27T11:00:00Z"
        type: string
      expires_in:
        description: |-
          ExpiresIn is the duration in seconds until the access token expires.
          required: true
          example: 3600
        example: 3600
        type: integer
      refresh_token:
        description: |-
          RefreshToken is the token used to obtain a new access token when the current one expires.
          required: true
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9... (different long token string)
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      roles:
        description: |-
          Roles is the list of roles assigned to the user.
          required: true
          example: ["user", "admin"]
        example:
        - user
        - admin
        items:
          type: string
        type: array
      token_type:
        description: |-
          TokenType indicates the type of token (always "Bearer").
          required: true
          example: Bearer
        example: Bearer
        type: string
      user_id:
        description: |-
          UserID is the unique identifier of the logged-in user.
          required: true
          example: 1
        example: 1
        type: integer
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.TopResponse:
    description: Lists the running processes within a container.
    properties:
      processes:
        description: |-
          Processes is a list of arrays, where each inner array represents a process and its corresponding column values.
          required: true
          example: [["1", "root", "/usr/sbin/nginx"], ["6", "nginx", "nginx: worker process"]]
        items:
          items:
            type: string
          type: array
        type: array
      titles:
        description: |-
          Titles are the column headers for the process list (e.g., "PID", "USER", "%CPU", "COMMAND").
          required: true
          example: ["PID", "USER", "COMMAND"]
        items:
          type: string
        type: array
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.UserListResponse:
    description: Contains a list of user details along with pagination information.
    properties:
      metadata:
        allOf:
        - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.MetadataResponse'
        description: |-
          Metadata contains pagination and other metadata for the response.
          required: true
      users:
        description: |-
          Users is the list of user objects returned for the current page.
          required: true
        items:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.UserResponse'
        type: array
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.UserResponse:
    description: Detailed information about a user account.
    properties:
      active:
        description: |-
          Active indicates whether the user account is currently active.
          required: true
          example: true
        example: true
        type: boolean
      created_at:
        description: |-
          CreatedAt is the timestamp when the user account was created.
          required: true
          example: 2023-01-15T09:30:00Z
        example: "2023-01-15T09:30:00Z"
        type: string
      email:
        description: |-
          Email is the user's email address.
          required: true
          example: user@example.com
        example: user@example.com
        type: string
      email_verified:
        description: |-
          EmailVerified indicates whether the user's email address has been verified.
          required: true
          example: true
        example: true
        type: boolean
      id:
        description: |-
          ID is the unique identifier for the user.
          required: true
          example: 1
        example: 1
        type: integer
      last_login:
        description: |-
          LastLogin is the timestamp of the user's last login. Omitted if the user has never logged in.
          example: 2023-10-27T10:00:00Z
        example: "2023-10-27T10:00:00Z"
        type: string
      name:
        description: |-
          Name is the user's display name.
          required: true
          example: John Doe
        example: John Doe
        type: string
      roles:
        description: |-
          Roles is the list of roles assigned to the user.
          required: true
          example: ["user", "admin"]
        example:
        - user
        - admin
        items:
          type: string
        type: array
      updated_at:
        description: |-
          UpdatedAt is the timestamp when the user account was last updated.
          required: true
          example: 2023-10-26T15:45:00Z
        example: "2023-10-26T15:45:00Z"
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.VolumeCreateRequest:
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.VolumeMapping:
    description: Defines how a host path or named volume is mounted into a container.
    properties:
      destination:
        description: |-
          Destination is the absolute path inside the container where the volume is mounted.
          required: true
          example: "/var/www/html"
        example: /var/www/html
        type: string
      read_only:
        description: |-
          ReadOnly specifies whether the mount should be read-only within the container.
          example: false
        example: false
        type: boolean
      source:
        description: |-
          Source is the name of the volume or the path on the host machine.
          required: true
          example: "my-app-data" or "/path/on/host"
        example: my-app-data
        type: string
    required:
    - destination
    - source
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.VolumeMountResponse:
    description: Information about a specific volume mount point inside a container.
    properties:
      destination:
        description: |-
          Destination is the absolute path inside the container where the volume is mounted.
          required: true
          example: "/data"
        example: /data
        type: string
      mode:
        description: |-
          Mode provides driver-specific options, often includes SELinux labels like 'z' or 'Z'.
          example: "z"
        example: z
        type: string
      rw:
        description: |-
          RW indicates if the mount is read-write.
          required: true
          example: true
        example: true
        type: boolean
      source:
        description: |-
          Source is the source path on the host or the name of the Docker volume.
          required: true
          example: "/path/on/host" or "my-app-data"
        example: my-app-data
        type: string
      volume_id:
        description: |-
          VolumeID is the name of the Docker volume (if Source refers to a named volume).
          example: "my-app-data"
        example: my-app-data
        type: string
    type: object
  github_com_threatflux_dockerServerMangerGoMCP_internal_models.VolumeResponse:
    description: Contains comprehensive details of a Docker volume, including configuration
      and usage.
    properties:
      containers:
        description: |-
          Containers lists the IDs of containers currently using this volume. Requires UsageData from Docker API.
          example: ["f7d9e8c7b6a5", "a1b2c3d4e5f6"]
        items:
          type: string
        type: array
      created_at:
        description: |-
          CreatedAt is the timestamp when the volume was created by Docker. Note: Docker API might return this as 'CreatedAt' string, needs parsing.
          required: true
          example: "2023-10-27T08:00:00Z"
        example: "2023-10-26T12:00:00Z"
        type: string
      driver:
        description: |-
          Driver is the volume driver used (e.g., local).
          required: true
          example: "local"
        example: local
        type: string
      id:
        description: |-
          ID is the internal database ID (if managed by the application).
          example: 12
        type: integer
      in_use:
        description: |-
          InUse indicates whether the volume is currently used by any containers. Requires UsageData from Docker API.
          example: true
        type: boolean
      labels:
        additionalProperties:
          type: string
        description: |-
          Labels are the labels applied to the volume.
          example: {"environment": "production", "backup": "true"}
        type: object
      mountpoint:
        description: |-
          Mountpoint is the path on the host where the volume data is stored.
          required: true
          example: "/var/lib/docker/volumes/my-app-data/_data"
        example: /var/lib/docker/volumes/my-app-data/_data
        type: string
      name:
        description: |-
          Name is the user-defined name of the volume.
          required: true
          example: "my-app-data"
        example: my-app-data
        type: string
      notes:
        description: |-
          Notes are user-defined notes stored in the application database.
          example: "Persistent data for the main database."
        type: string
      options:
        additionalProperties:
          type: string
        description: Options are driver-specific options for the volume.
        type: object
      scope:
        description: |-
          Scope indicates the scope of the volume (e.g., local, global).
          required: true
          example: "local"
        example: local
        type: string
      size:
        description: |-
          Size is the calculated size of the volume in bytes. Requires UsageData from Docker API.
          example: 104857600
        type: integer
      size_human:
        description: |-
          SizeHuman is the calculated size of the volume in a human-readable format.
          example: "100MB"
        type: string
      status:
        additionalProperties:
          type: string
        description: Status provides low-level status information about the volume
          (driver-specific).
        type: object
      updated_at:
        description: |-
          UpdatedAt is the timestamp when the volume record was last updated in the application database.
          example: "2023-10-27T08:10:00Z"
        type: string
      user_id:
        description: |-
          UserID is the ID of the user who owns/created this volume record in the application database.
          example: 1
        type: integer
      volume_id:
        description: |-
          VolumeID is the unique identifier assigned by Docker (often the same as Name).
          required: true
          example: "my-app-data"
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the API documentation for the Docker Server Manager Go MCP.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Docker Server Manager Go MCP API
  version: "1.0"
paths:
  /admin/users:
    get:
      description: Retrieves a paginated list of all users. Only admins can perform
        this action.
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      - default: id
        description: Field to sort by (e.g., email, name, created_at)
        in: query
        name: sort_by
        type: string
      - default: asc
        description: Sort order (asc, desc)
        enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      - description: Search term for email or name
        in: query
        name: search
        type: string
      - description: Filter by active status
        in: query
        name: active
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved users" // Use UserListResponse
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.UserListResponse'
              type: object
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Admin privileges required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List all users (Admin)
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Creates a new user with specified details. Only admins can perform
        this action.
      parameters:
      - description: New user details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.AdminCreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created user
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.UserResponse'
              type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Admin privileges required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "409":
          description: Email already in use
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new user (Admin)
      tags:
      - Admin
  /admin/users/{id}:
    delete:
      description: Deletes a user by ID. Only admins can perform this action.
      parameters:
      - description: User ID
        example: 1
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Successfully deleted user
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Admin privileges required or cannot delete self
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a user (Admin)
      tags:
      - Admin
    get:
      description: Retrieves details for a specific user by their ID. Only admins
        can perform this action.
      parameters:
      - description: User ID
        example: 1
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.UserResponse'
              type: object
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Admin privileges required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user by ID (Admin)
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Updates a user's details by ID. Only admins can perform this action.
      parameters:
      - description: User ID
        example: 1
        in: path
        name: id
        required: true
        type: integer
      - description: User update details (fields are optional)
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.AdminUpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.UserResponse'
              type: object
        "400":
          description: Invalid input or user ID
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Admin privileges required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "409":
          description: Email already in use
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a user (Admin)
      tags:
      - Admin
  /api/v1/containers/{id}/exec:
    post:
      consumes:
      - application/json
      description: |-
        Creates and starts an exec instance in a running container.
        Supports both non-interactive execution (HTTP POST) and interactive sessions (WebSocket upgrade).
        For interactive sessions, upgrade the connection to WebSocket.
      parameters:
      - description: Container ID
        example: my-running-container
        in: path
        name: id
        required: true
        type: string
      - description: Exec configuration
        in: body
        name: exec
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerExecCreateRequest'
      produces:
      - application/json
      responses:
        "101":
          description: Switching Protocols (interactive WebSocket)
          schema:
            type: string
        "200":
          description: Success (non-interactive)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerExecResponse'
        "400":
          description: Bad Request (e.g., missing command, invalid ID)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Forbidden (user lacks permission)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Container Not Found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Execute Command in Container
      tags:
      - Containers
  /api/v1/health:
    get:
      description: Checks the health status of the API server, providing basic information
        like version and environment.
      produces:
      - application/json
      responses:
        "200":
          description: Server status information
          schema:
            additionalProperties: true
            type: object
      summary: Health Check
      tags:
      - System
    head:
      description: Checks the health status of the API server, providing basic information
        like version and environment.
      produces:
      - application/json
      responses:
        "200":
          description: Server status information
          schema:
            additionalProperties: true
            type: object
      summary: Health Check
      tags:
      - System
  /auth/login:
    post:
      consumes:
      - application/json
      description: Logs in a user with email and password, returning JWT tokens.
      parameters:
      - description: User login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged in
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.TokenResponse'
              type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      summary: Log in a user
      tags:
      - Auth
  /auth/logout:
    post:
      description: Invalidates the current access token.
      responses:
        "204":
          description: Successfully logged out
        "400":
          description: Invalid authorization header
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Log out a user
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes the access and refresh tokens using a valid refresh token.
      parameters:
      - description: Refresh token details
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully refreshed tokens
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.TokenResponse'
              type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Invalid or expired refresh token
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      summary: Refresh JWT tokens
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user. The first user registered automatically gets
        the admin role.
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully registered and logged in
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.TokenResponse'
              type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "409":
          description: Email already in use
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      summary: Register a new user
      tags:
      - Auth
  /compose:
    get:
      description: Get a list of tracked Docker Compose deployments and their status.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved deployments
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.DeploymentInfo'
                  type: array
              type: object
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List Compose Deployments
      tags:
      - Compose
  /compose/{id}:
    get:
      description: Get detailed status information for a specific Docker Compose deployment
        by project name.
      parameters:
      - description: Project Name (ID)
        example: my-web-app
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved deployment details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.DeploymentInfo'
              type: object
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Deployment not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Compose Deployment Details
      tags:
      - Compose
  /compose/{id}/down:
    post:
      description: Stops and removes containers, networks, and optionally volumes
        for a deployment.
      parameters:
      - description: Project Name (ID)
        example: my-web-app
        in: path
        name: id
        required: true
        type: string
      - default: false
        description: Remove named volumes declared in the 'volumes' section
        example: true
        in: query
        name: remove_volumes
        type: boolean
      - default: false
        description: Remove containers for services not defined in the Compose file
        example: true
        in: query
        name: remove_orphans
        type: boolean
      - default: false
        description: Force removal
        example: false
        in: query
        name: force
        type: boolean
      produces:
      - application/json
      responses:
        "202":
          description: Removal process started
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Deployment not found (required for ComposeFile)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Remove Compose Project (Down)
      tags:
      - Compose
  /compose/{id}/restart:
    post:
      description: Restarts containers for services in a deployment.
      parameters:
      - description: Project Name (ID)
        example: my-web-app
        in: path
        name: id
        required: true
        type: string
      - description: Timeout in seconds for stopping containers before restarting
        example: 5
        in: query
        name: timeout
        type: integer
      produces:
      - application/json
      responses:
        "202":
          description: Restart process started
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Deployment not found (required for ComposeFile)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Restart Compose Project Services
      tags:
      - Compose
  /compose/{id}/scale:
    post:
      consumes:
      - application/json
      description: Scales a specific service within a deployment to the desired number
        of replicas.
      parameters:
      - description: Project Name (ID)
        example: my-web-app
        in: path
        name: id
        required: true
        type: string
      - description: Service name and replica count
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ComposeScaleRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Scaling process started
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Invalid request body or parameters
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Deployment or service not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Scale Compose Service
      tags:
      - Compose
  /compose/{id}/start:
    post:
      description: Starts existing containers for services in a deployment.
      parameters:
      - description: Project Name (ID)
        example: my-web-app
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Start process started
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                message:
                  type: string
              type: object
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Deployment not found (required for ComposeFile)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Start Compose Project Services
      tags:
      - Compose
  /compose/{id}/stop:
    post:
      description: Stops running containers for services in a deployment without removing
        them.
      parameters:
      - description: Project Name (ID)
        example: my-web-app
        in: path
        name: id
        required: true
        type: string
      - description: Timeout in seconds for stopping containers
        example: 5
        in: query
        name: timeout
        type: integer
      produces:
      - application/json
      responses:
        "202":
          description: Stop process started
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Deployment not found (required for ComposeFile)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Stop Compose Project Services
      tags:
      - Compose
  /compose/up:
    post:
      consumes:
      - application/json
      description: Parses, validates, and deploys a Docker Compose project.
      parameters:
      - description: Compose file content and deployment options
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ComposeUpRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Deployment process started
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "422":
          description: Failed to parse or validate compose file
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error during deployment
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Deploy Compose Project (Up)
      tags:
      - Compose
  /compose/validate:
    post:
      consumes:
      - application/json
      description: Parses and validates the structure of a provided Docker Compose
        file content.
      parameters:
      - description: Compose file content
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ComposeValidateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Compose file is valid
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  properties:
                    status:
                      type: string
                  type: object
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "422":
          description: Validation failed (invalid YAML or structure)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Validate Compose File
      tags:
      - Compose
  /containers:
    get:
      description: Get a list of containers based on optional filters.
      parameters:
      - default: false
        description: Show all containers (default shows just running)
        in: query
        name: all
        type: boolean
      - default: -1
        description: Maximum number of containers to return
        in: query
        name: limit
        type: integer
      - default: false
        description: Return container sizes
        in: query
        name: size
        type: boolean
      - description: Filters to apply (JSON map format, e.g., {\
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved container list
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerListResponse'
              type: object
        "400":
          description: Invalid filter format
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List containers
      tags:
      - Containers
    post:
      consumes:
      - application/json
      description: Creates a new Docker container based on the provided configuration.
      parameters:
      - description: Container Configuration
        in: body
        name: container
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created container
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.Container'
              type: object
        "400":
          description: Invalid input or configuration
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied (e.g., creating privileged container as non-admin)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Image not found (if pull fails)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "409":
          description: Container name already in use
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error (e.g., Docker daemon error)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new container
      tags:
      - Containers
  /containers/{id}:
    delete:
      description: Removes a container.
      parameters:
      - description: Container ID or Name
        example: my-nginx-container
        in: path
        name: id
        required: true
        type: string
      - default: false
        description: Force removal of a running container
        example: true
        in: query
        name: force
        type: boolean
      - default: false
        description: Remove anonymous volumes associated with the container
        example: true
        in: query
        name: volumes
        type: boolean
      produces:
      - application/json
      responses:
        "204":
          description: Container removed successfully
        "400":
          description: Invalid container ID
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Container not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "409":
          description: Conflict (e.g., container is running and force=false)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Remove a container
      tags:
      - Containers
    get:
      description: Get detailed information about a specific container.
      parameters:
      - description: Container ID or Name
        example: my-nginx-container
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved container details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerResponse'
              type: object
        "400":
          description: Invalid container ID
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Container not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get container details
      tags:
      - Containers
  /containers/{id}/changes:
    get:
      description: Shows changes to files or directories on a container's filesystem
        since it was created.
      parameters:
      - description: Container ID or Name
        example: my-nginx-container
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved filesystem changes
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ChangeItemResponse'
                  type: array
              type: object
        "400":
          description: Invalid container ID
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Container not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Inspect changes on a container's filesystem
      tags:
      - Containers
  /containers/{id}/files:
    get:
      description: Retrieves a file or directory from a container as a TAR archive.
      parameters:
      - description: Container ID or Name
        example: my-nginx-container
        in: path
        name: id
        required: true
        type: string
      - description: Absolute path to the file or directory inside the container
        example: /etc/nginx/nginx.conf
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/x-tar
      responses:
        "200":
          description: TAR archive of the requested path
          schema:
            type: file
        "400":
          description: Invalid container ID or missing path parameter
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Container or path not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Download file or directory from container
      tags:
      - Containers
    post:
      consumes:
      - application/x-tar
      description: Uploads a TAR archive to a specified path within a container. The
        request body must be the TAR archive.
      parameters:
      - description: Container ID or Name
        example: my-nginx-container
        in: path
        name: id
        required: true
        type: string
      - description: Absolute destination path inside the container
        example: /usr/share/nginx/html
        in: query
        name: path
        required: true
        type: string
      - description: TAR archive content
        in: body
        name: archive
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Archive successfully uploaded
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Invalid container ID, missing path parameter, or empty/invalid
            request body (e.g., malformed tar)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Container not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error (e.g., failed to write archive)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Upload file or directory to container
      tags:
      - Containers
  /containers/{id}/logs:
    get:
      description: Retrieves logs from a container. Can optionally stream logs.
      parameters:
      - description: Container ID or Name
        example: my-nginx-container
        in: path
        name: id
        required: true
        type: string
      - default: false
        description: Stream logs
        example: true
        in: query
        name: follow
        type: boolean
      - default: true
        description: Include stdout
        example: true
        in: query
        name: stdout
        type: boolean
      - default: true
        description: Include stderr
        example: true
        in: query
        name: stderr
        type: boolean
      - description: Show logs since timestamp (e.g., 2013-01-02T13:23:37Z) or relative
          (e.g., 42m for 42 minutes)
        example: 1h
        in: query
        name: since
        type: string
      - description: Show logs before timestamp (e.g., 2013-01-02T13:23:37Z) or relative
          (e.g., 42m for 42 minutes)
        example: "2023-10-27T11:00:00Z"
        in: query
        name: until
        type: string
      - default: false
        description: Show timestamps
        example: true
        in: query
        name: timestamps
        type: boolean
      - default: '"all"'
        description: Number of lines to show from the end of the logs (e.g., 100 or
          all)
        example: "50"
        in: query
        name: tail
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Container logs stream
          schema:
            type: string
        "400":
          description: Invalid container ID or query parameters
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Container not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get container logs
      tags:
      - Containers
  /containers/{id}/pause:
    post:
      description: Pauses a running container.
      parameters:
      - description: Container ID or Name
        example: my-nginx-container
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Container paused successfully
        "400":
          description: Invalid container ID
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Container not found or not running
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Pause a container
      tags:
      - Containers
  /containers/{id}/rename:
    post:
      consumes:
      - application/json
      description: Renames an existing container.
      parameters:
      - description: Container ID or Name
        example: my-nginx-container
        in: path
        name: id
        required: true
        type: string
      - description: New Container Name
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerRenameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully renamed container
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ContainerResponse'
              type: object
        "400":
          description: Invalid container ID or new name
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Container not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "409":
          description: New name already in use
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Rename a container
      tags:
      - Containers
  /containers/{id}/restart:
    post:
      description: Restarts a container.
      parameters:
      - description: Container ID or Name
        example: my-nginx-container
        in: path
        name: id
        required: true
        type: string
      - default: 10
        description: Timeout in seconds to wait for container to stop before starting
          it
        example: 5
        in: query
        name: timeout
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Container restarted successfully
        "400":
          description: Invalid container ID or timeout
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Container not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Restart a container
      tags:
      - Containers
  /containers/{id}/start:
    post:
      description: Starts a stopped or created container.
      parameters:
      - description: Container ID or Name
        example: my-nginx-container
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Container started successfully
        "400":
          description: Invalid container ID
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Container not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Start a container
      tags:
      - Containers
  /containers/{id}/stats:
    get:
      description: Retrieves a live stream or a single snapshot of resource usage
        statistics for a container.
      parameters:
      - description: Container ID or Name
        example: my-nginx-container
        in: path
        name: id
        required: true
        type: string
      - default: false
        description: Stream stats (true) or get a single snapshot (false)
        example: true
        in: query
        name: stream
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: 'Container statistics stream (if stream=true, Content-Type:
            text/event-stream)'
          schema:
            type: string
        "400":
          description: Invalid container ID
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Container not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get container resource usage statistics
      tags:
      - Containers
  /containers/{id}/stop:
    post:
      description: Stops a running container.
      parameters:
      - description: Container ID or Name
        example: my-nginx-container
        in: path
        name: id
        required: true
        type: string
      - default: 10
        description: Timeout in seconds to wait for container to stop before killing
          it
        example: 5
        in: query
        name: timeout
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Container stopped successfully
        "400":
          description: Invalid container ID or timeout
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Container not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Stop a container
      tags:
      - Containers
  /containers/{id}/top:
    get:
      description: Shows the processes running inside a container, similar to the
        'top' command.
      parameters:
      - description: Container ID or Name
        in: path
        name: id
        required: true
        type: string
      - default: '""'
        description: Arguments to pass to 'ps' command (e.g., -ef)
        in: query
        name: ps_args
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved process list
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.TopResponse'
              type: object
        "400":
          description: Invalid container ID
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Container not found or not running
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List processes running inside a container
      tags:
      - Containers
  /containers/{id}/unpause:
    post:
      description: Unpauses a paused container.
      parameters:
      - description: Container ID or Name
        example: my-nginx-container
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Container unpaused successfully
        "400":
          description: Invalid container ID
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Container not found or not paused
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Unpause a container
      tags:
      - Containers
  /image-history/{id}:
    get:
      description: Retrieves the history (layers) of an image. Handles names with
        slashes.
      parameters:
      - description: Image ID or Name:Tag (URL encoded if contains slashes)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved image history
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageHistoryItem'
                  type: array
              type: object
        "400":
          description: Invalid image ID/name format
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Image not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get image history
      tags:
      - Images
  /images:
    get:
      description: Retrieves a list of Docker images.
      parameters:
      - default: 1
        description: Page number
        example: 1
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        example: 20
        in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      - default: created
        description: Field to sort by (e.g., repository, tag, size, created)
        example: size
        in: query
        name: sort_by
        type: string
      - default: desc
        description: Sort order (asc, desc)
        enum:
        - asc
        - desc
        example: asc
        in: query
        name: sort_order
        type: string
      - default: false
        description: Show all images (including intermediate layers)
        example: true
        in: query
        name: all
        type: boolean
      - description: Filter by dangling images
        example: true
        in: query
        name: dangling
        type: boolean
      - description: Filter by label (e.g., key=value)
        example: maintainer=me
        in: query
        name: label
        type: string
      - description: Search term for repository, tag, or image ID
        example: nginx
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved images
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.PaginatedResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageListResponse'
              type: object
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List images
      tags:
      - Images
  /images/{id}:
    delete:
      description: Removes an image by its ID or name/tag. Handles names with slashes.
      parameters:
      - description: Image ID, Name, or Name:Tag (URL encoded if contains slashes)
        in: path
        name: id
        required: true
        type: string
      - default: false
        description: Force removal of the image
        in: query
        name: force
        type: boolean
      - default: false
        description: Do not delete untagged parents
        in: query
        name: noprune
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Image removal report
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageRemoveResponse'
                  type: array
              type: object
        "400":
          description: Invalid image ID/name format
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Image not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "409":
          description: Conflict (e.g., image is in use by a container)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Remove an image
      tags:
      - Images
    get:
      description: Retrieves detailed information about a specific image by its ID
        or name/tag. Handles names with slashes.
      parameters:
      - description: Image ID, Name, or Name:Tag (URL encoded if contains slashes)
        example: nginx:latest
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved image details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageResponse'
              type: object
        "400":
          description: Invalid image ID/name format
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Image not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get image details
      tags:
      - Images
  /images/build:
    post:
      consumes:
      - multipart/form-data
      description: Builds a Docker image from a Dockerfile and context. Context can
        be uploaded as a TAR archive.
      parameters:
      - description: Image tag (e.g., myapp:latest)
        example: my-custom-app:v1.1
        in: formData
        name: tag
        required: true
        type: string
      - description: Dockerfile content (alternative to context archive)
        in: formData
        name: dockerfile
        type: file
      - description: Build context as TAR archive (can contain Dockerfile)
        in: formData
        name: context
        type: file
      - default: '"Dockerfile"'
        description: Path to Dockerfile within the context archive
        example: build/Dockerfile.prod
        in: formData
        name: dockerfile_path
        type: string
      - default: false
        description: Do not use cache when building the image
        example: true
        in: formData
        name: nocache
        type: boolean
      - default: false
        description: Always attempt to pull a newer version of the image
        example: true
        in: formData
        name: pull
        type: boolean
      - description: Build-time variables (e.g., buildarg.VERSION=1.0)
        example: buildarg.APP_VERSION=1.1
        in: formData
        name: buildarg.*
        type: string
      - description: Set metadata for an image (e.g., label.maintainer=me)
        example: label.project=webapp
        in: formData
        name: label.*
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Image built successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageBuildResponse'
              type: object
        "400":
          description: Invalid input (e.g., missing tag, invalid tag format, missing
            Dockerfile/context)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error (e.g., Docker daemon error, failed to
            process context)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Build an image
      tags:
      - Images
  /images/pull:
    post:
      consumes:
      - application/json
      description: Pulls an image from a Docker registry. Authentication can be provided.
      parameters:
      - description: Image Pull Request
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImagePullRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Image pulled successfully
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImagePullResponse'
              type: object
        "400":
          description: Invalid input (e.g., missing image name)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required or invalid credentials
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied for registry
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Image not found in registry
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error (e.g., Docker daemon error)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Pull an image
      tags:
      - Images
  /images/tag:
    post:
      consumes:
      - application/json
      description: Creates a new tag for an existing image. Handles names with slashes.
      parameters:
      - description: New Tag Info
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ImageTagRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Image tagged successfully
        "400":
          description: Invalid input (e.g., missing repo/tag, invalid format)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Source image not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "409":
          description: Tag already exists
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Tag an image
      tags:
      - Images
  /networks:
    get:
      description: Retrieves a list of Docker networks.
      parameters:
      - default: 1
        description: Page number
        example: 1
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        example: 20
        in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      - default: created_at
        description: Field to sort by (e.g., name, created_at, driver)
        example: name
        in: query
        name: sort_by
        type: string
      - default: desc
        description: Sort order (asc, desc)
        enum:
        - asc
        - desc
        example: asc
        in: query
        name: sort_order
        type: string
      - description: Filter by driver name
        example: bridge
        in: query
        name: driver
        type: string
      - description: Filter by network name
        example: app-net
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved networks
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkResponse'
                  type: array
              type: object
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List networks
      tags:
      - Networks
    post:
      consumes:
      - application/json
      description: Creates a new Docker network.
      parameters:
      - description: Network Configuration
        in: body
        name: network
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created network
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkResponse'
              type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "409":
          description: Network name already exists
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new network
      tags:
      - Networks
  /networks/{id}:
    delete:
      description: Removes a Docker network by its ID or name.
      parameters:
      - description: Network ID or Name
        example: my-app-network
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Network removed successfully
        "400":
          description: Invalid network ID/name
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Network not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "409":
          description: Conflict (e.g., network is in use)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Remove a network
      tags:
      - Networks
    get:
      description: Retrieves detailed information about a specific network by its
        ID or name.
      parameters:
      - description: Network ID or Name
        example: my-app-network
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved network details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkResponse'
              type: object
        "400":
          description: Invalid network ID/name
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Network not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get network details
      tags:
      - Networks
  /networks/{id}/connect:
    post:
      consumes:
      - application/json
      description: Connects a container to a specified network.
      parameters:
      - description: Network ID or Name
        example: my-app-network
        in: path
        name: id
        required: true
        type: string
      - description: Container Connect Info
        in: body
        name: connect_info
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkConnectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Container connected successfully
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Network or container not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "409":
          description: Container already connected
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Connect a container to a network
      tags:
      - Networks
  /networks/{id}/disconnect:
    post:
      consumes:
      - application/json
      description: Disconnects a container from a specified network.
      parameters:
      - description: Network ID or Name
        example: my-app-network
        in: path
        name: id
        required: true
        type: string
      - description: Container Disconnect Info
        in: body
        name: disconnect_info
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.NetworkDisconnectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Container disconnected successfully
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Network or container not found, or container not connected
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Disconnect a container from a network
      tags:
      - Networks
  /system/events:
    get:
      description: Streams real-time events from the Docker daemon using Server-Sent
        Events (SSE).
      parameters:
      - description: Show events since timestamp (e.g., 2013-01-02T13:23:37Z) or relative
          (e.g., 42m)
        example: 1h
        in: query
        name: since
        type: string
      - description: Show events until timestamp (e.g., 2013-01-02T13:23:37Z) or relative
          (e.g., 42m)
        example: "2023-10-27T12:00:00Z"
        in: query
        name: until
        type: string
      - description: JSON encoded map[string][]string for filtering (e.g. {\
        example: '{\"type\":[\"container\"],\"event\":[\"start\",\"stop\"]}'
        in: query
        name: filters
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: SSE stream of Docker events
          schema:
            type: string
        "400":
          description: Invalid filter format
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Stream Docker system events
      tags:
      - System
  /system/info:
    get:
      description: Retrieves detailed information about the Docker host system.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved system info" // Use local model
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SystemInfoResponse'
              type: object
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error (e.g., Docker daemon error)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Docker system information
      tags:
      - System
  /system/ping:
    get:
      description: Pings the Docker daemon to check connectivity and API version compatibility.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully pinged Docker daemon" // Use local model
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.PingResponse'
              type: object
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error (e.g., Docker daemon error)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Ping Docker daemon
      tags:
      - System
  /system/prune:
    post:
      description: Removes unused containers, networks, images, and build cache.
      parameters:
      - description: Prune options
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SystemPruneRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully pruned resources
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SystemPruneResponse'
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Prune unused Docker resources
      tags:
      - System
  /user/me:
    get:
      description: Retrieves the details of the currently authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.UserResponse'
              type: object
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get current user details
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Updates the name and/or email of the currently authenticated user.
        Changing email requires re-verification.
      parameters:
      - description: User update details
        in: body
        name: user
        required: true
        schema:
          properties:
            email:
              type: string
            name:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.UserResponse'
              type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "409":
          description: Email already in use
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update current user details
      tags:
      - User
  /user/password:
    put:
      consumes:
      - application/json
      description: Allows the authenticated user to change their own password.
      parameters:
      - description: Password change details
        in: body
        name: passwords
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "204":
          description: Password successfully changed
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required or incorrect current password
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Change current user password
      tags:
      - User
  /volumes:
    get:
      description: Retrieves a paginated list of Docker volumes, optionally filtered.
      parameters:
      - default: 1
        description: Page number
        example: 1
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        example: 20
        in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      - default: created_at
        description: Field to sort by (e.g., name, created_at, driver)
        example: name
        in: query
        name: sort_by
        type: string
      - default: desc
        description: Sort order (asc, desc)
        enum:
        - asc
        - desc
        example: asc
        in: query
        name: sort_order
        type: string
      - description: Filter by driver name
        example: local
        in: query
        name: driver
        type: string
      - description: Filter by volume name (exact match)
        example: my-app-data
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved volumes
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.VolumeResponse'
                  type: array
              type: object
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List volumes
      tags:
      - Volumes
    post:
      consumes:
      - application/json
      description: Creates a new Docker volume.
      parameters:
      - description: Volume Configuration
        in: body
        name: volume
        required: true
        schema:
          $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.VolumeCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created volume" // Changed to 200 OK as we return
            the created object
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.VolumeResponse'
              type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "409":
          description: Volume name already exists
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new volume
      tags:
      - Volumes
  /volumes/{id}:
    delete:
      description: Removes a Docker volume by its name or database ID.
      parameters:
      - description: Volume Name or Database ID
        example: my-app-data
        in: path
        name: id
        required: true
        type: string
      - default: false
        description: Force removal of the volume
        example: true
        in: query
        name: force
        type: boolean
      produces:
      - application/json
      responses:
        "204":
          description: Volume removed successfully
        "400":
          description: Invalid volume ID/name
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Volume not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "409":
          description: Conflict (e.g., volume is in use)
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Remove a volume
      tags:
      - Volumes
    get:
      description: Retrieves detailed information about a specific volume by its name
        or database ID.
      parameters:
      - description: Volume Name or Database ID
        example: my-app-data
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved volume details
          schema:
            allOf:
            - $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.VolumeResponse'
              type: object
        "400":
          description: Invalid volume ID/name
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "401":
          description: Authentication required
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "403":
          description: Permission denied
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "404":
          description: Volume not found
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_threatflux_dockerServerMangerGoMCP_internal_models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get volume details
      tags:
      - Volumes
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: 'Type "Bearer" followed by a space and JWT token. Example: "Bearer
      {token}"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
